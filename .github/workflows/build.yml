name: Build, Test and Deploy
on:
  push:
    branches:
      - main
      - develop
      - hotfix
      - release
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: sonarcloud
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies for get_all_missions
        run: |
          cd modules/missions/get_all_missions
          pip install -r requirements.txt
      - name: Install dependencies for insert_mission
        run: |
          cd modules/missions/insert_mission
          pip install -r requirements.txt
      - name: Install dependencies for get_one_mission
        run: |
          cd modules/missions/get_one_mission
          pip install -r requirements.txt
      - name: Install dependencies for complete_mission
        run: |
          cd modules/missions/complete_mission
      - name: Install dependencies for cancel_mission
        run: |
          cd modules/missions/cancel_mission
          pip install -r requirements.txt
      - name: Install dependencies for search_mission
        run: |
          cd modules/missions/search_mission
          pip install -r requirements.txt
      - name: Install dependencies for register_user
        run: |
          cd modules/users/register_user
          pip install -r requirements.txt
      - name: Install dependencies for set_password
        run: |
          cd modules/users/set_password
          pip install -r requirements.txt
      - name: Install dependencies for login
        run: |
          cd modules/users/login
          pip install -r requirements.txt
      - name: Install dependencies for exist_user
        run: |
          cd modules/users/exist_user
          pip install -r requirements.txt
      - name: Install dependencies for register_alexa_user
        run: |
          cd modules/users/register_alexa_user
          pip install -r requirements.txt
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli
      - name: Build SAM application
        run: sam build
      - name: Deploy SAM application
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name projectDUDU --capabilities CAPABILITY_IAM
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

