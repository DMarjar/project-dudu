AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  project-dudu

  Sample SAM Template for project-dudu

Globals:
  Function:
    Timeout: 120
    MemorySize: 256

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  GetAllMissionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/get_all_missions/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetAllMissions:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /get_all_missions
            Method: get

  InsertMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/insert_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        InsertMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /insert_mission
            Method: post

  GetOneMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/get_one_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetOneMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /get_one_mission/{id_mission}
            Method: get

  RecoverPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/recover_password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetOneMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /recover_password/
            Method: post

  CompleteMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/complete_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CancelMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /complete_mission
            Method: put
      
  CancelMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/cancel_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CancelMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /cancel_mission
            Method: put

  MissionApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MissionApi
      StageName: Prod

Outputs:
  LambdaExecutionRoleArn:
    Description: "Implicit IAM Role created for Lambda function"
    Value: !GetAtt LambdaExecutionRole.Arn
    
  GetAllMissionsApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get All Missions function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_all_missions/"
  GetOneMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get One Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_one_mission/{id_mission}"
  RecoverPasswordApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Recover Password function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/recover_password/"
  CompleteMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get One Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/complete_mission/"
  CancelMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Cancel Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/cancel_mission/"
  InsertMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Insert Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/insert_mission/"

  GetAllMissionsFunctionArn:
    Description: "Get All Missions Lambda Function ARN"
    Value: !GetAtt GetAllMissionsFunction.Arn
  InsertMissionFunctionArn:
    Description: "Insert Mission Lambda Function ARN"
    Value: !GetAtt InsertMissionFunction.Arn
  GetOneMissionFunctionArn:
    Description: "Get One Mission Lambda Function ARN"
    Value: !GetAtt GetOneMissionFunction.Arn
  RecoverPasswordFunctionArn:
    Description: "Recover Password Lambda Function ARN"
    Value: !GetAtt RecoverPasswordFunction.Arn
  CompleteMissionFunctionArn:
    Description: "Complete Mission Lambda Function ARN"
    Value: !GetAtt CompleteMissionFunction.Arn
  CancelMissionFunctionArn:
    Description: "Cancel Mission Lambda Function ARN"
    Value: !GetAtt CancelMissionFunction.Arn
