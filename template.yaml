AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  project-dudu

  Sample SAM Template for project-dudu

Globals:
  Function:
    Timeout: 120
    MemorySize: 256
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"


Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  GetAllMissionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/get_all_missions/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetAllMissions:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /get_all_missions
            Method: get

  MissionExpirationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/mission_expiration/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        MissionExpiration:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /mission_expiration
            Method: post

  InsertMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/insert_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        InsertMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /insert_mission
            Method: post

  GetOneMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/get_one_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetOneMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /get_one_mission/{id_mission}
            Method: get

  RecoverPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/recover_password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetOneMission:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /recover_password/
            Method: post

  ChangePasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/change_password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetOneMission:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /change_password/
            Method: post
  GetProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/profile/get_profile
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetProfile:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /get_profile
            Method: get

  UpdateProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/profile/update_profile/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateProfile:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /update_profile
            Method: put

  CompleteMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/complete_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CompleteMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /complete_mission
            Method: put


  CancelMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/cancel_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CancelMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /cancel_mission
            Method: put

  SearchMissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/missions/search_mission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        SearchMission:
          Type: Api
          Properties:
            RestApiId: !Ref MissionApi
            Path: /search_mission
            Method: post

  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/register_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        RegisterUser:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /register_user
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/login/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        RegisterUser:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /login
            Method: post

  SetPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/set_password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        SetPassword:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /set_password
            Method: post

  DeleteUserProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/delete_user_profile/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CancelMission:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /delete_user_profile
            Method: delete

  ExistUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/users/exist_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        ExistUser:
          Type: Api
          Properties:
            RestApiId: !Ref UsersApi
            Path: /exist_user
            Method: post

  MissionApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MissionApi
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  UsersApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UsersApi
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

Outputs:
  LambdaExecutionRoleArn:
    Description: "Implicit IAM Role created for Lambda function"
    Value: !GetAtt LambdaExecutionRole.Arn

  GetAllMissionsApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get All Missions function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_all_missions/"
  MissionExpirationApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Mission Expiration function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/mission_expiration/"
  GetOneMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get One Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_one_mission/{id_mission}"
  GetProfileApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get Profile function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_profile/"
  RecoverPasswordApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Recover Password function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/recover_password/"
  ChangePasswordApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Change Password function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/change_password/"
  UpdateProfileApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Update Profile function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_profile/"
  CompleteMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Get One Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/complete_mission/"
  CancelMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Cancel Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/cancel_mission/"
  InsertMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Insert Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/insert_mission/"
  SearchMissionApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Search Mission function"
    Value: !Sub "https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/search_mission/"
  RegisterUserApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Register User function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/register_user/"
  SetPasswordApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Set Password function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/set_password/"
  LoginApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Login function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login/"
  DeleteUserProfileApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Delete User Profile function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_user_profile/"
  ExistUserApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Exist User function"
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/exist_user/"


  GetAllMissionsFunctionArn:
    Description: "Get All Missions Lambda Function ARN"
    Value: !GetAtt GetAllMissionsFunction.Arn
  MissionExpirationFunctionArn:
    Description: "Expires Missions Lambda Function ARN"
    Value: !GetAtt MissionExpirationFunction.Arn
  InsertMissionFunctionArn:
    Description: "Insert Mission Lambda Function ARN"
    Value: !GetAtt InsertMissionFunction.Arn
  GetOneMissionFunctionArn:
    Description: "Get One Mission Lambda Function ARN"
    Value: !GetAtt GetOneMissionFunction.Arn
  RecoverPasswordFunctionArn:
    Description: "Recover Password Lambda Function ARN"
    Value: !GetAtt RecoverPasswordFunction.Arn
  GetProfileFunctionArn:
    Description: "Get Profile Lambda Function ARN"
    Value: !GetAtt GetProfileFunction.Arn
  UpdateProfileFunctionArn:
    Description: "Update Profile Lambda Function ARN"
    Value: !GetAtt UpdateProfileFunction.Arn
  ChangePasswordFunctionArn:
    Description: "Change Password Lambda Function ARN"
    Value: !GetAtt ChangePasswordFunction.Arn
  CompleteMissionFunctionArn:
    Description: "Complete Mission Lambda Function ARN"
    Value: !GetAtt CompleteMissionFunction.Arn
  CancelMissionFunctionArn:
    Description: "Cancel Mission Lambda Function ARN"
    Value: !GetAtt CancelMissionFunction.Arn
  SearchMissionFunctionArn:
    Description: "Search Mission Lambda Function ARN"
    Value: !GetAtt SearchMissionFunction.Arn
  RegisterUserFunctionArn:
    Description: "Register User Lambda Function ARN"
    Value: !GetAtt RegisterUserFunction.Arn
  SetPasswordFunctionArn:
    Description: "Set Password Lambda Function ARN"
    Value: !GetAtt SetPasswordFunction.Arn
  LoginFunctionArn:
    Description: "Login Lambda Function ARN"
    Value: !GetAtt LoginFunction.Arn
  ExistUserFunctionArn:
    Description: "Exist User Lambda Function ARN"
    Value: !GetAtt ExistUserFunction.Arn
  DeleteUserProfileFunctionArn:
    Description: "Delete User Profile Lambda Function ARN"
    Value: !GetAtt DeleteUserProfileFunction.Arn
